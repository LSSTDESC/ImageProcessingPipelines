#!/bin/bash

if [[ $SITE == "LSST-IN2P3" ]]
then
    echo "launching monitoring script..... output will be under $(dirname ${SGE_STDOUT_PATH})"
    /pbs/home/d/descprod/bin/joremon.sh 
fi

mkdir -p ${WORKDIR}/registries/
export REGISTRIES="${WORKDIR}/registries"
pipelineSet REGISTRIES ${REGISTRIES}

status=`verify_checkpoint singleFrameDriver`
if [[ $status = 0 ]]; then
    echo "skipping singleFrameDriver and proceeding" 
elif [[ $status = 1 ]]; then
    echo "halting at singleFrameDriver" 
    exit 1
else
    echo "Running singleFrameDriver.py"
    singleFrameDriver.py ${IN_DIR} --rerun ${RERUN1} --id visit=${VISIT}  --cores $((NSLOTS+1)) --timeout 99999999 --loglevel CameraMapper=warn

    echo "Running checCcdAstrometry.py"
    ${ROOT_SOFTS}/ImageProcessingPipelines/python/util/checkCcdAstrometry.py ${IN_DIR}/rerun/${RERUN1} --id visit=${VISIT} --loglevel CameraMapper=warn

    echo "building mapper"
    ${ROOT_SOFTS}/ImageProcessingPipelines/python/util/tract2visit_mapper.py --indir=${IN_DIR}/rerun/${RERUN1} --db=${REGISTRIES}/tracts_mapping_${VISIT}.sqlite3 --visits=${VISIT}
fi


status=`verify_checkpoint skyCorrection`
if [[ $status = 0 ]]; then
    echo "skipping skyCorrection and proceeding"
elif [[ $status = 1 ]]; then
    echo "halting at skyCorrection"
    exit 1
else
    echo "Running skyCorrection.py"
    skyCorrection.py ${OUT_DIR}  --rerun ${RERUN1} --id visit=${VISIT} --cores $((NSLOTS+1)) --timeout 999999999 --no-versions --loglevel CameraMapper=warn
fi


status=`verify_checkpoint visitAnalysis`
if [[ $status = 0 ]]; then
    echo "skipping visitAnalysis and proceeding"
elif [[ $status = 1 ]]; then
    echo "halting at visitAnalysis"
    exit 1
else
    echo "Running visitAnalysis.py for visit=${VISIT} et streamID=${streamID}"
    tract=`sqlite3 ${REGISTRIES}/tracts_mapping_${VISIT}.sqlite3 "select distinct tract from overlaps where visit=${VISIT} limit 1;"`
    visitAnalysis.py ${IN_DIR} --rerun ${RERUN1}:QA-${RERUN1} --id visit=$VISIT --tract=$tract -j ${NSLOTS} -c doWriteParquetTables=False
fi
status=`verify_checkpoint sfp_validation`
if [[ $status = 0 ]]; then
    echo "skipping sfp_validation and proceeding"
elif [[ $status = 1 ]]; then
    echo "halting at sfp_validation"
    exit 1
else
    SFPDIR=/sps/lsst/users/descprod/web/LSST/DESC/DC2/Pipeline/SFP/${RERUN1}
    mkdir -p ${SFPDIR}
    make_sfp_validation_plots.py --outdir ${SFPDIR} ${IN_DIR}/rerun/${RERUN1} ${VISIT}
fi
