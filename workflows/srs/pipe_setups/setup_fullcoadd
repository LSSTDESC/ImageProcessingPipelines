#!/bin/bash

# checkpoint
#source ${SETUP_LOCATION}/checkpoint

WORKDIR=${IN_DIR}/work/${RERUN}/${streamID}/coadd
mkdir -p ${WORKDIR} 
pipelineSet WORKDIR ${WORKDIR} 
export WORKDIR

#check that the skymap is present
if [ ! -d "$OUT_DIR/rerun/${RERUN2}/deepCoadd" ]; then
    #deepCoadd dir is created by the first execution of makeSkyMap.py
    makeSkyMap.py ${IN_DIR} --rerun ${RERUN}
    cp ${OUT_DIR}/rerun/${RERUN1}/tracts_mapping.sqlite3 ${OUT_DIR}/rerun/${RERUN2}/tracts_mapping.sqlite3
    #turn the absolute path into a relative one for the root entry in the yaml file, to ease shipping to NERSC
    #sed -i -e 's+'${IN_DIR}'+..\/..+g' ${IN_DIR}rerun/$RERUN2/repositoryCfg.yaml
    #
fi

#Prepare the separate u and grizy reruns that occur in run_coaddDriver
echo "grep -n ${RERUN2}-u ${OUT_DIR}/rerun/${RERUN2}/repositoryCfg.yaml | cut -f1 -d:"
already_done=`grep -n ${RERUN2}-u ${OUT_DIR}/rerun/${RERUN2}/repositoryCfg.yaml | cut -f1 -d:`
echo "test:${already_done}"
if [[ -z $already_done ]]; then
    #find where $RERUN1 is mentioned in the yaml file...
    number=`grep -n ${RERUN1} ${OUT_DIR}/rerun/${RERUN2}/repositoryCfg.yaml | cut -f1 -d:`
    #...and append the two coaddDriver dedicated dirs after it
    echo "inserting \"../${RERUN2}-u\" inside ${OUT_DIR}/rerun/${RERUN2}/repositoryCfg.yaml"
    sed -i "$((number+1))i -\ ../${RERUN2}-u" ${OUT_DIR}/rerun/${RERUN2}/repositoryCfg.yaml
    echo "inserting \"../${RERUN2}-u\" inside ${OUT_DIR}/rerun/${RERUN2}/repositoryCfg.yaml"
    sed -i "$((number+2))i -\ ../${RERUN2}-grizy" ${OUT_DIR}/rerun/${RERUN2}/repositoryCfg.yaml
fi

#retrieve or build the list of tracts
if [[ -z "${TRACT_FILE}" ]]; then
    sqlite3 ${OUT_DIR}/rerun/${RERUN1}/tracts_mapping.sqlite3 "select DISTINCT tract from overlaps;" > ${WORKDIR}/all_tracts.list
    TRACT_FILE=${WORKDIR}/all_tracts.list
    export TRACT_FILE
    pipelineSet TRACT_FILE ${TRACT_FILE}
fi

while read line; do
    read tract patch <<< $line
    echo $tract $patch
    pipelineSet DM_SETUP ${DM_SETUP} 
    pipelineSet WORKDIR ${WORKDIR}
    pipelineSet TRACT ${tract}
    pipelineSet PATCH ${patch}
    pipelineCreateStream task_coadd -1 "DM_SETUP="\""${DM_SETUP}"\"",WORKDIR="\""${WORKDIR}"\"",TRACT="\""${tract}"\"",PATCH="\""${patch}"\"""
    #pipelineCreateStream task_coadd_tract -1 "DM_SETUP="\""${DM_SETUP}"\"",WORKDIR="\""${WORKDIR}"\"",RERUN1="\""${RERUN1}"\"",RERUN2="\""${RERUN2}"\"",TRACT="\""${tract}"\"",PATCH="\""${patch}\"""
done < ${TRACT_FILE}


