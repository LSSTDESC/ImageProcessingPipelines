<?xml version="1.0" encoding="UTF-8"?>
<pipeline xmlns="http://glast-ground.slac.stanford.edu/pipeline" 
          xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" 
          xs:schemaLocation="http://glast-ground.slac.stanford.edu/pipeline 
			     http://srs.slac.stanford.edu/Pipeline-II/schemas/2.1/pipeline.xsd">
  
  <task name="MINIDRP-Run1_2p-Test" type="LSST" version="0.1">
    <notation>Test on running the DM stack on Run1.2p images</notation>
    <variables>
      <!-- Job site and configuration-->
      <var name="RUNID">Run1.2-test</var>
      <var name="SITE">NERSC</var>
      <var name="JOBSITE">${SITE=="NERSC" ? "CORIP" : SITE}</var>
      <var name="MAXCPU">10000</var>
      <var name="MAXCPULONG">10000</var>
      <var name="IN2P3_BATCH_OPTIONS"> -l sps=1,os=cl7,xrootd=0 </var>
      <var name="IN2P3_HUGE_OPTIONS"> -q huge </var>
      <var name="IN2P3_MLONG_OPTIONS"> -q mc_long -pe multicores 8 </var>
      <var name="IN2P3_MCHUGE_OPTIONS"> -q mc_huge -pe multicores 8 </var>
      <var name="NERSC_BATCH_OPTIONS"> -p MINIDRPHK | -L SCRATCH,projecta | -C haswell </var>
      <var name="BATCH_OPTIONS">${SITE=="NERSC" ? "${NERSC_BATCH_OPTIONS}" : "${IN2P3_BATCH_OPTIONS} "}</var>
      <var name="EXTRA_OPTIONS_0">${SITE=="NERSC" ? " " : "${IN2P3_HUGE_OPTIONS}
 "}</var>
      <var name="EXTRA_OPTIONS_1">${SITE=="NERSC" ? " " : "${IN2P3_MCHUGE_OPTION
S} "}</var>
      <var name="EXTRA_OPTIONS_2">${SITE=="NERSC" ? " " : "${IN2P3_MLONG_OPTIONS} "}</var>

      <var name="TASKNAME">MINIDRP-Run1_2p-Test</var>
      <var name="NERSC_DRP_ROOT">/global/cscratch1/sd/descdm/DC2</var>
      <var name="NERSC_DRP_OUTPUT">${NERSC_DRP_ROOT}/${TASKNAME}/output</var>

      <!-- Base directory where script files will be placed -->
      <var name="PIPE_SUBDIR">ImageProcessingPipelines/workflows/srs</var>
      <var name="PIPE_SETUPS">${PIPE_SUBDIR}/pipe_setups</var>
      <var name="PIPE_SCRIPTS">${PIPE_SUBDIR}/pipe_scripts</var>
      <var name="DM_CONFIGS">${PIPE_SUBDIR}/dm_configs</var>
      <!-- At SLAC -->
      <var name="IN2P3_SLAC_SCRIPT_LOCATION">/u/ki/boutigny/ki19/$</var>
      <var name="NERSC_SLAC_SCRIPT_LOCATION">/nfs/farm/g/lsst/u/heather/minidrp/${PIPE_SETUPS}</var>
      <var name="SLAC_SCRIPT_LOCATION">${SITE=="NERSC" ? NERSC_SLAC_SCRIPT_LOCATION : IN2P3_SLAC_SCRIPT_LOCATION}</var>
      <!-- Local to JOBSITE -->
      <var name="IN2P3_ROOT_SOFTS">/pbs/throng/lsst/software/desc/DC2/</var>
      <var name="NERSC_ROOT_SOFTS">/global/homes/d/descdm/minidrp</var> 
      <var name="ROOT_SOFTS">${SITE=="NERSC" ? NERSC_ROOT_SOFTS : IN2P3_ROOT_SOFTS}</var>
       <var name="IN2P3_SCRIPT_LOCATION">${IN2P3_ROOT_SOFTS}/${PIPE_SCRIPTS}</var>
      <var name="IN2P3_SETUP_LOCATION">${IN2P3_ROOT_SOFTS}/${PIPE_SETUPS}</var>
      <var name="IN2P3_CONFIGS_LOCATION">${IN2P3_ROOT_SOFTS}/${DM_CONFIGS}</var>
      <var name="NERSC_SCRIPT_LOCATION">${NERSC_ROOT_SOFTS}/${PIPE_SCRIPTS}</var>
      <var name="NERSC_SETUP_LOCATION">${NERSC_ROOT_SOFTS}/${PIPE_SETUPS}</var>
      <var name="NERSC_CONFIGS_LOCATION">${NERSC_ROOT_SOFTS}/${DM_CONFIGS}</var>
      <var name="SCRIPT_LOCATION">${SITE=="NERSC" ? NERSC_SCRIPT_LOCATION : IN2P3_SCRIPT_LOCATION}</var>
      <var name="SETUP_LOCATION">${SITE=="NERSC" ? NERSC_SETUP_LOCATION : IN2P3_SETUP_LOCATION}</var>
      <var name="CONFIGS_LOCATION">${SITE=="NERSC" ? NERSC_CONFIGS_LOCATION : IN2P3_CONFIGS_LOCATION}</var>
      <!-- Log Files -->
      <var name="IN2P3_logRoot">/sps/lsst/users/descprod/Pipeline2/Logs</var>    
      <var name="NERSC_logRoot">${NERSC_ROOT_SOFTS}/logs</var>    
      <var name="logRoot">${SITE=="NERSC" ? NERSC_logRoot : IN2P3_logRoot}</var>
      <!-- Script names -->
      <var name="SCRIPT_NAME">DC2Workflow.py</var>
      <var name="BATCH_NAME">DC2Batch.sh</var>
    </variables>

    <!-- setup ingests -->
    <process name="setup_ingest" site="${JOBSITE}">
      <notation>Ingest the input data serially</notation>
      <job maxCPU="${MAXCPU}" 
           batchOptions="${BATCH_OPTIONS}"
       executable="${SETUP_LOCATION}/${BATCH_NAME}"/>
    </process>

    <!-- ingest images -->
    <process name="ingestData" site="${JOBSITE}">
      <notation>Ingest the input data serially</notation>
      <job maxCPU="${MAXCPU}" 
           batchOptions="${BATCH_OPTIONS} ${EXTRA_OPTIONS_1}"
	       executable="${SETUP_LOCATION}/${BATCH_NAME}"/>
      <depends>
        <after process="setup_ingest"/>
      </depends>
    </process>
    
    <!-- ingest reference catalog -->
    <process name="ingestRefCat" site="${JOBSITE}">
      <notation>Ingest the reference catalog</notation>
      <job batchOptions="${BATCH_OPTIONS}"
       executable="${SETUP_LOCATION}/${BATCH_NAME}"/>
      <depends>
        <after process="setup_ingest"/>
      </depends>
    </process>


   <!-- processEimage -->
    <!--   setup -->
    <process name="setup_processEimage" site="${JOBSITE}">
      <notation>Setup for processEimage</notation>
      <job maxCPU="${MAXCPU}" batchOptions="${BATCH_OPTIONS}"
       executable="${SETUP_LOCATION}/${BATCH_NAME}"/>
    <depends>
        <after process="ingestData"/>
        <after process="ingestRefCat"/>
      </depends>
    </process>
    <!--   launch jobs -->
    <process name="processEimage" site="${JOBSITE}">
      <notation>Run processEimage for all filter and visits</notation>
      <script><![CDATA[
      execfile("%s/%s" % (SLAC_SCRIPT_LOCATION, SCRIPT_NAME))
      run_processEimage()
      ]]>
      </script>
      <depends>
        <after process="setup_processEimage"/>
      </depends>
      <createsSubtasks>
        <subtask>processEimageFilter</subtask>
      </createsSubtasks>    
    </process>

<!--   Subtasks -->
    <!--   Subtask to run processEimage  -->
    <task name="processEimageFilter" type="LSST">
      <process name="runProcessEimage" site="${JOBSITE}">
    <variables>
      <var name="streamID">${format(pipeline.stream, "%01d")}</var>
    </variables>
    <job batchOptions="${BATCH_OPTIONS} ${EXTRA_OPTIONS_2}" 
         executable="${CUR_SCRIPT}"/>
      </process>                
    </task>

  </task>
</pipeline>
