#!/bin/bash

# checkpoint
source ${SETUP_LOCATION}/checkpoint

if [[ $RERUN = *":"* ]]; then
    IFS=":" read RERUN1 RERUN2 <<< $RERUN
else
    RERUN1=$RERUN
    RERUN2=$RERUN
fi
export RERUN1
export RERUN2

if [[ -z "${RAWCALIB_FILES}" ]]; then
    echo "env var RAWCALIB_FILES not set"
else
    echo ingestDriver.py ${OUT_DIR} @${RAWCALIB_FILES} --rerun ${RERUN} --cores ${NSLOTS} --ignore-ingested
fi

build_bias_script(){
 cat> $1<<EOF
#!/bin/bash
DM_SETUP=${DM_SETUP}
source ${SETUP_LOCATION}/DMsetup.sh
export OMP_NUM_THREADS=1
#
constructBias.py ${OUT_DIR} --rerun ${RERUN} --cores \${NSLOTS}
#
ingestCalib.py ${OUT_DIR} --output ${OUT_DIR}/CALIB --cores \${NSLOTS}
#
sqlite3 ${OUT_DIR}/CALIB/calibRegistry.sqlite3 "update bias set validStart='2021-01-01', validEnd='2033-01-01' where id>0;"
EOF
}

build_dark_script(){
 cat> $1<<EOF
#!/bin/bash
DM_SETUP=${DM_SETUP}
source ${SETUP_LOCATION}/DMsetup.sh
export OMP_NUM_THREADS=1
#
constructDark.py ${OUT_DIR} --rerun ${RERUN} --cores \${NSLOTS}
#
ingestCalib.py ${OUT_DIR} --output ${OUT_DIR}/CALIB --cores \${NSLOTS}
#
sqlite3 ${OUT_DIR}/CALIB/calibRegistry.sqlite3 "update dark set validStart='2021-01-01', validEnd='2033-01-01' where id>0;"
EOF
}

build_flat_script(){
 cat> $1<<EOF
#!/bin/bash
DM_SETUP=${DM_SETUP}
source ${SETUP_LOCATION}/DMsetup.sh
export OMP_NUM_THREADS=1
#
constructFlat.py ${OUT_DIR} --rerun ${RERUN} --id filter=$2 --cores \${NSLOTS}
#
ingestCalib.py ${OUT_DIR} --output ${OUT_DIR}/CALIB --cores \${NSLOTS}
#
sqlite3 ${OUT_DIR}/CALIB/calibRegistry.sqlite3 "update flat set validStart='2021-01-01', validEnd='2033-01-01' where id>0;"
EOF
}


mkdir -p ${OUT_DIR}/rerun/${RERUN1}/scripts

script=${OUT_DIR}/rerun/${RERUN1}/scripts/bias.sh
build_bias_script ${script}
echo pipelineCreateStream task_bias -1 CUR_SCRIPT=${script}

script=${OUT_DIR}/rerun/${RERUN1}/scripts/dark.sh
build_dark_script ${script}
echo pipelineCreateStream task_dark -1 CUR_SCRIPT=${script}

for FILT in $(echo ${FILTERS} | tr "," "\n")
do
    script=${OUT_DIR}/rerun/${RERUN1}/scripts/flat_$FILT.sh
    build_flat_script ${script} ${FILT}
    echo pipelineCreateStream task_flat -1 CUR_SCRIPT=${script}
done
