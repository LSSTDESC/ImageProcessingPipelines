#!/bin/bash

# checkpoint
source ${SETUP_LOCATION}/checkpoint

WORKDIR=${IN_DIR}/work/${RERUN}/${streamID}/calexp
mkdir -p ${WORKDIR}
pipelineSet WORKDIR ${WORKDIR}
export WORKDIR
#export SCRDIR=${WORKDIR}/scripts
#mkdir -p ${SCRDIR}

#start by building the skymap as it is needed for the tract/patch mapping DB construction

#HMKif [ ! -d "$IN_DIR/rerun/$RERUN2/deepCoadd" ]; then
if [ ! -d "$IN_DIR/rerun/$RERUN/deepCoadd" ]; then
    makeSkyMap.py ${IN_DIR} --rerun ${RERUN}
#    cp -r $IN_DIR/rerun/$RERUN2/deepCoadd $IN_DIR/rerun/$RERUN1/
    #turn the absolute path into a relative one for the root entry in the yaml file, to ease shipping to NERSC
    #we need to do that at the end 
    #sed -i -e 's+'${IN_DIR}'+..\/..+g' ${IN_DIR}/rerun/$RERUN2/repositoryCfg.yaml
fi

if [[ -z "${VISIT_FILE}" ]]; then
    sqlite3 ${IN_DIR}/registry.sqlite3 "select DISTINCT visit from raw_visit;" > ${WORKDIR}/all_visits_from_register.list
    VISIT_FILE=${WORKDIR}/all_visits_from_register.list
    export VISIT_FILE
fi

 
while read id; do
  IFS="=" read DUMMY1 DUMMY2 <<< $id
  if [ -z "${DUMMY2}" ]; then
      visit=$id #=$DUMMY1
      visit_cmd="--id visit=${visit}"
  else
      visit=$DUMMY2
      visit_cmd=$id
  fi
  export visit
  #echo $visit
  if [[ $SITE == "NERSC" ]]; then
    pipelineSet VISIT ${visit} 
    pipelineCreateStream task_calexp -1 WORKDIR=${WORKDIR},VISIT=${visit}
  fi
done < ${VISIT_FILE}

