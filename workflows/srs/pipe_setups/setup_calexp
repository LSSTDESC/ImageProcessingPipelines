#!/bin/bash

# checkpoint
#source ${SETUP_LOCATION}/checkpoint

WORKDIR=${IN_DIR}/work/${RERUN}/${streamID}/calexp
mkdir -p ${WORKDIR}
pipelineSet WORKDIR ${WORKDIR}
export WORKDIR
#export SCRDIR=${WORKDIR}/scripts
#mkdir -p ${SCRDIR}

#start by building the skymap as it is needed for the tract/patch mapping DB construction

if [ ! -d "$IN_DIR/rerun/${RERUN1}/deepCoadd" ]; then
    #deepCoadd dir is created by the first execution of makeSkyMap.py
    echo "makeSkyMap.py ${IN_DIR} --rerun ${RERUN1}"
    makeSkyMap.py ${IN_DIR} --rerun ${RERUN1}
    #cp -r $IN_DIR/rerun/${RERUN2}/deepCoadd $IN_DIR/rerun/${RERUN1}/
    #turn the absolute path into a relative one for the root entry in the yaml file, to ease shipping to NERSC
    #we need to do that at the end 
    #sed -i -e 's+'${IN_DIR}'+..\/..+g' ${IN_DIR}/rerun/$RERUN2/repositoryCfg.yaml
fi

if [ ! -d "$IN_DIR/rerun/${RERUN1}/deepCoadd" ]; then
    echo "makeSkyMap.py failed, forcing exit"
    exit 1
fi

if [[ -z "${VISIT_FILE}" ]]; then
    sqlite3 ${IN_DIR}/registry.sqlite3 "select DISTINCT visit from raw_visit;" > ${WORKDIR}/all_visits_from_register.list
    VISIT_FILE=${WORKDIR}/all_visits_from_register.list
    export VISIT_FILE
fi

 
while read id; do
  IFS="=" read DUMMY1 DUMMY2 <<< $id
  if [ -z "${DUMMY2}" ]; then
      visit=$id #=$DUMMY1
      visit_cmd="--id visit=${visit}"
  else
      visit=$DUMMY2
      visit_cmd=$id
  fi
  export visit
  #echo $visit
  if [[ $SITE == "LSST-IN2P3" ]]; then
    pipelineSet VISIT ${visit} 
    pipelineCreateStream task_calexp -1 WORKDIR=${WORKDIR},VISIT=${visit}
  elif [[ $SITE == "NERSC" ]]; then
    raft_list=`sqlite3 ${OUTPUT_DATA_DIR}/registry.sqlite3 'select distinct raftName from raw where visit=${visit}'`
    for raftName in $raft_list; do
  	pipelineSet VISIT ${visit}
	pipelineSet RAFTNAME ${raftName}
  	pipelineCreateStream task_calexp -1 WORKDIR=${WORKDIR},VISIT=${visit},RAFTNAME=${raftName}
    done
  fi
done < ${VISIT_FILE}

